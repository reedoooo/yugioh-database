{"ast":null,"code":"const belongsToExtraDeck = type => {\n  if (type === 'XYZ Monster' || type === 'Pendulum Effect Fusion Monster' || type === 'Synchro Monster' || type === 'Synchro Pendulum Effect Monster' || type === 'Synchro Tuner Monster' || type === 'XYZ Pendulum Effect Monster' || type === 'Fusion Monster' || type === 'Link Monster') {\n    return true;\n  } else {\n    return false;\n  }\n};\nconst reducer = (state, action) => {\n  let {\n    payload,\n    type,\n    index\n  } = action;\n  switch (type) {\n    case 'UPDATE_LISTER':\n      return {\n        ...state,\n        lister: [...payload]\n      };\n    case 'UPDATE_LISTER_ITEMS':\n      return {\n        ...state,\n        lister: [...state.lister, ...payload]\n      };\n    case 'ADD_CARD_TO_DECK':\n      if (belongsToExtraDeck(payload.type)) {\n        return {\n          ...state,\n          deck: {\n            main: [...state.deck.main],\n            extra: [...state.deck.extra, payload]\n          }\n        };\n      } else {\n        return {\n          ...state,\n          deck: {\n            main: [...state.deck.main, payload],\n            extra: [...state.deck.extra]\n          }\n        };\n      }\n    case 'REMOVE_CARD':\n      if (belongsToExtraDeck(payload.type)) {\n        return {\n          ...state,\n          deck: {\n            main: [...state.deck.main],\n            extra: [...state.deck.extra.slice(0, index).concat(state.deck.extra.slice(index + 1))]\n          }\n        };\n      } else {\n        return {\n          ...state,\n          deck: {\n            main: [...state.deck.main.slice(0, index).concat(state.deck.main.slice(index + 1))],\n            extra: [...state.deck.extra]\n          }\n        };\n      }\n    case 'ERASE_DECK':\n      return {\n        ...state,\n        deck: {\n          main: [],\n          extra: []\n        }\n      };\n    case 'SET_LOADING_STATE':\n      return {\n        ...state,\n        isLoading: payload\n      };\n    case 'SET_HAS_MORE_ITEMS_TO_LOAD':\n      return {\n        ...state,\n        hasMoreItemsToLoad: payload\n      };\n    case 'SET_NEXT_PAGE_TO_LOAD':\n      return {\n        ...state,\n        nextPageToLoad: payload\n      };\n  }\n  return state;\n};\nexport default reducer;","map":{"version":3,"names":["belongsToExtraDeck","type","reducer","state","action","payload","index","lister","deck","main","extra","slice","concat","isLoading","hasMoreItemsToLoad","nextPageToLoad"],"sources":["/Users/reedvogt/Desktop/yugioh-database/src/Redux/Reducers/index.js"],"sourcesContent":["const belongsToExtraDeck = (type) => {\n    if (        type === 'XYZ Monster' ||\n                type === 'Pendulum Effect Fusion Monster' ||\n                type === 'Synchro Monster' ||\n                type === 'Synchro Pendulum Effect Monster' ||\n                type === 'Synchro Tuner Monster' ||\n                type === 'XYZ Pendulum Effect Monster' ||\n                type === 'Fusion Monster' ||\n                type === 'Link Monster'\n            ) { return true} \n            else {return false}  \n        \n}   \n\nconst reducer = (state, action) => {\n    let {payload, type, index} = action\n    switch (type) {\n        case 'UPDATE_LISTER':\n            return {\n                ...state,\n                lister: [...payload]\n            }\n\n        case 'UPDATE_LISTER_ITEMS':\n            return {\n                ...state,\n                lister: [...state.lister, ...payload]\n            }\n        \n        case 'ADD_CARD_TO_DECK':\n            if ( belongsToExtraDeck(payload.type)){\n                    return {\n                        ...state,\n                        deck: {main: [...state.deck.main], extra:[...state.deck.extra, payload]}\n                    }\n                } else {\n                        return {\n                            ...state,\n                            deck: {main: [...state.deck.main, payload], extra:[...state.deck.extra]}\n                        }\n                }\n\n        case 'REMOVE_CARD':\n            if ( belongsToExtraDeck(payload.type)){\n                return {\n                    ...state,\n                    deck: {main: [...state.deck.main], extra: [...state.deck.extra.slice(0,index).concat(state.deck.extra.slice(index+1))]}\n                }\n            } else {\n                return {\n                    ...state,\n                    deck: {main: [...state.deck.main.slice(0,index).concat(state.deck.main.slice(index+1))], extra: [...state.deck.extra]}\n                }\n            }\n        \n        case 'ERASE_DECK':\n            return {\n                ...state, deck: {main: [], extra: []}\n            }\n\n        case 'SET_LOADING_STATE':\n            return {\n                ...state, isLoading: payload\n            }\n        \n        case 'SET_HAS_MORE_ITEMS_TO_LOAD':\n            return {\n                ...state, hasMoreItemsToLoad: payload\n            }\n        \n        case 'SET_NEXT_PAGE_TO_LOAD':\n            return {\n                ...state,\n                nextPageToLoad: payload\n            }\n        \n    }\n    return state\n}\n\nexport default reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}